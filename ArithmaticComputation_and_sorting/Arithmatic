#! /bin/bash
echo "--------------------------------Arithmetic Compution And Sorting ----------------------------------"

# declare a dictonary
declare -A arithmaticOperation

#TO TAKING INPUT FROM USER
read -p "Enter first input :" a
read -p "Enter second input:" b
read -p "Enter third input :" c


#COMPUTE ARITHMETIC OPERATION
result=`echo "scale=2;$a + $b * $c" | bc`
echo "Result:" $result

#compute operatin 2
resultOne=`echo "scale=2;$a * $b + $c" | bc`
echo "Result:" $resultOne

#compute operation 3
resultTwo=`echo "scale=2;$c + $a / $b " | bc`
echo "Result:" $resultTwo

#commit operation 4
esultThree=`echo "scale=2;$a % $b + $c" | bc`
echo "Result:" $resultThree

#TO STORE THE DICTIONARY
arithmaticOperation[result]=$result
arithmaticOperation[resultOne]=$resultOne
arithmaticOperation[resultTwo]=$resultTwo
arithmaticOperation[resultThree]=$resultThree

#to read dictonary value from array
or((index=0; index<=${#arithmaticOperation[@]}; index++))
do
  array[index]=${arithmaticOperation[result$((index+1))]}
done
#TO PRINT
echo "${array[@]}"

#TO FUNCTION SORTING RESULTS IN DECENDING ORDER
function descendingOrderSort()
{
	for(( index=0; index<${#array[@]}; index ++ ))
	do
		for(( indexOne=0; indexOne<${#array[@]}-1; indexOne ++ ))
		do
			if (( $(echo "${array[indexOne+1]} > ${array[indexOne]}" | bc -l ) ))
			then
				temp=${array[indexOne]}
				array[indexOne]=${array[indexOne+1]}
				array[indexOne+1]=$temp
			fi
		done
	done
	echo "To data descending order"${array[@]}
}

#TO FUNCTION CALL FOR SORTING IN DECENDING ORDER
descendingOrderSort ${array[@]}

#TO FUNCTION SORTING RESULTS IN ASCENDING ORDER
function ascendingOrderSort()
{
   for(( index=0; index<${#array[@]}; index ++ ))
   do
      for(( indexOne=0; indexOne<${#array[@]}-1; indexOne ++ ))
      do
         if (( $(echo "${array[indexOne+1]} < ${array[indexOne]}" | bc -l ) ))
         then
            temp=${array[indexOne]}
            array[indexOne]=${array[indexOne+1]}
            array[indexOne+1]=$temp
         fi
      done
   done
   echo "To data ascending order:"${array[@]}
}

#TO FUNCTION CALL FOR SORTING IN ASCENDING ORDER
ascendingOrderSort ${array[@]}
